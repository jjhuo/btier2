!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
_GNU_SOURCE	.\btier_inspect.c	3;"	d	file:
_GNU_SOURCE	.\btier_setup.c	3;"	d	file:
_LARGEFILE64_SOURCE	.\btier_inspect.c	1;"	d	file:
_LARGEFILE64_SOURCE	.\btier_setup.c	1;"	d	file:
_XOPEN_SOURCE	.\btier_inspect.c	2;"	d	file:
_XOPEN_SOURCE	.\btier_setup.c	2;"	d	file:
as_sprintf	.\btier_inspect.c	/^void *as_sprintf(const char *fmt, ...)$/;"	f
as_sprintf	.\btier_setup.c	/^void *as_sprintf(const char *fmt, ...)$/;"	f
backdev	.\btier_inspect.c	/^	struct backing_device **backdev;$/;"	m	struct:option_info	typeref:struct:option_info::backing_device	file:
backdev	.\btier_setup.c	/^	struct backing_device **backdev;$/;"	m	struct:option_info	typeref:struct:option_info::backing_device	file:
backdev_count	.\btier_inspect.c	/^	int backdev_count;$/;"	m	struct:option_info	file:
backdev_count	.\btier_setup.c	/^	int backdev_count;$/;"	m	struct:option_info	file:
backing_device	.\btier_inspect.c	/^struct backing_device {$/;"	s	file:
backing_device	.\btier_setup.c	/^struct backing_device {$/;"	s	file:
backup	.\btier_inspect.c	/^	int backup;$/;"	m	struct:option_info	file:
backup_device_magic	.\btier_inspect.c	/^void backup_device_magic(int fd, u64 total_device_size,$/;"	f
backup_list	.\btier_inspect.c	/^void backup_list(int fd, u64 size, u64 soffset, char *type, int device)$/;"	f
bitlistsize	.\btier_inspect.c	/^	u64 bitlistsize;$/;"	m	struct:backing_device	file:
bitlistsize	.\btier_setup.c	/^	u64 bitlistsize;$/;"	m	struct:backing_device	file:
bitlistsize_total	.\btier_inspect.c	/^	u64 bitlistsize_total;$/;"	m	struct:option_info	file:
bitlistsize_total	.\btier_setup.c	/^	u64 bitlistsize_total;$/;"	m	struct:option_info	file:
blocklistsize	.\btier_inspect.c	/^	u64 blocklistsize;$/;"	m	struct:option_info	file:
blocklistsize	.\btier_setup.c	/^	u64 blocklistsize;$/;"	m	struct:option_info	file:
clear_list	.\btier_setup.c	/^void clear_list(int fd, u64 size, u64 soffset)$/;"	f
create	.\btier_setup.c	/^	int create;$/;"	m	struct:option_info	file:
datafile	.\btier_inspect.c	/^	char *datafile;$/;"	m	struct:backing_device	file:
datafile	.\btier_setup.c	/^	char *datafile;$/;"	m	struct:backing_device	file:
device	.\btier_inspect.c	/^	char *device;$/;"	m	struct:option_info	file:
device	.\btier_setup.c	/^	char *device;$/;"	m	struct:option_info	file:
devicesize	.\btier_inspect.c	/^	u64 devicesize;$/;"	m	struct:backing_device	file:
devicesize	.\btier_setup.c	/^	u64 devicesize;$/;"	m	struct:backing_device	file:
die_ioctlerr	.\btier_inspect.c	15;"	d	file:
die_ioctlerr	.\btier_setup.c	15;"	d	file:
die_syserr	.\btier_inspect.c	16;"	d	file:
die_syserr	.\btier_setup.c	16;"	d	file:
errno	.\btier_inspect.c	/^int errno;$/;"	v
errno	.\btier_setup.c	/^int errno;$/;"	v
get_opts	.\btier_inspect.c	/^int get_opts(int argc, char *argv[])$/;"	f
get_opts	.\btier_setup.c	/^int get_opts(int argc, char *argv[])$/;"	f
main	.\btier_inspect.c	/^int main(int argc, char *argv[])$/;"	f
main	.\btier_setup.c	/^int main(int argc, char *argv[])$/;"	f
mkoptions	.\btier_inspect.c	/^static struct option_info mkoptions;$/;"	v	typeref:struct:option_info	file:
mkoptions	.\btier_setup.c	/^static struct option_info mkoptions;$/;"	v	typeref:struct:option_info	file:
option_info	.\btier_inspect.c	/^struct option_info {$/;"	s	file:
option_info	.\btier_setup.c	/^struct option_info {$/;"	s	file:
parse_datafile	.\btier_inspect.c	/^void parse_datafile(char *optarg)$/;"	f
parse_datafile	.\btier_setup.c	/^void parse_datafile(char *optarg)$/;"	f
restore	.\btier_inspect.c	/^	int restore;$/;"	m	struct:option_info	file:
restore_device_magic	.\btier_inspect.c	/^void restore_device_magic(int fd, u64 total_device_size,$/;"	f
restore_list	.\btier_inspect.c	/^void restore_list(int fd, u64 size, u64 soffset, char *type, int device)$/;"	f
s_malloc	.\btier_inspect.c	/^void *s_malloc(size_t size)$/;"	f
s_malloc	.\btier_setup.c	/^void *s_malloc(size_t size)$/;"	f
s_pread	.\btier_inspect.c	/^int s_pread(int fd, void *buf, size_t len, off_t off)$/;"	f
s_pread	.\btier_setup.c	/^int s_pread(int fd, void *buf, size_t len, off_t off)$/;"	f
s_pwrite	.\btier_inspect.c	/^int s_pwrite(int fd, const void *buf, size_t len, u64 off)$/;"	f
s_pwrite	.\btier_setup.c	/^int s_pwrite(int fd, const void *buf, size_t len, u64 off)$/;"	f
s_realloc	.\btier_inspect.c	/^void *s_realloc(void *ptr, size_t size)$/;"	f
s_realloc	.\btier_setup.c	/^void *s_realloc(void *ptr, size_t size)$/;"	f
sectorsize	.\btier_inspect.c	/^	int sectorsize;$/;"	m	struct:option_info	file:
sectorsize	.\btier_setup.c	/^	int sectorsize;$/;"	m	struct:option_info	file:
startofbitlist	.\btier_inspect.c	/^	u64 startofbitlist;$/;"	m	struct:backing_device	file:
startofbitlist	.\btier_setup.c	/^	u64 startofbitlist;$/;"	m	struct:backing_device	file:
startofblocklist	.\btier_inspect.c	/^	u64 startofblocklist;$/;"	m	struct:backing_device	file:
startofblocklist	.\btier_setup.c	/^	u64 startofblocklist;$/;"	m	struct:backing_device	file:
startofdata	.\btier_inspect.c	/^	u64 startofdata;$/;"	m	struct:backing_device	file:
startofdata	.\btier_setup.c	/^	u64 startofdata;$/;"	m	struct:backing_device	file:
sync	.\btier_setup.c	/^	int sync;$/;"	m	struct:option_info	file:
tier_dta_file	.\btier_inspect.c	/^	int tier_dta_file;$/;"	m	struct:backing_device	file:
tier_dta_file	.\btier_setup.c	/^	int tier_dta_file;$/;"	m	struct:backing_device	file:
tier_set_fd	.\btier_inspect.c	/^int tier_set_fd(int fd, char *datafile, int devicenr)$/;"	f
tier_set_fd	.\btier_setup.c	/^int tier_set_fd(int fd, char *datafile, int devicenr)$/;"	f
tier_setup	.\btier_setup.c	/^int tier_setup(int op, int fd, int devicenr)$/;"	f
total_device_size	.\btier_inspect.c	/^	u64 total_device_size;$/;"	m	struct:option_info	file:
total_device_size	.\btier_setup.c	/^	u64 total_device_size;$/;"	m	struct:option_info	file:
usage	.\btier_inspect.c	/^void usage(char *name)$/;"	f
usage	.\btier_setup.c	/^void usage(char *name)$/;"	f
use_bio	.\btier_setup.c	/^	int use_bio;$/;"	m	struct:backing_device	file:
use_bio	.\btier_setup.c	/^	int use_bio;$/;"	m	struct:option_info	file:
write_device_magic	.\btier_setup.c	/^void write_device_magic(int fd, u64 total_device_size,$/;"	f
